// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// Home row mods macro
// #define HRML(k2,k3,k4) &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
// #define HRMR(k1,k2,k3) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3
// #define WHRML(k2,k3,k4) &ht LALT k2  &ht LGUI k3  &ht LCTRL k4
// #define WHRMR(k1,k2,k3) &ht RCTRL k1  &ht RGUI k2  &ht RALT k3

#define MAC 0
#define RIG 1
#define LEF 2
#define TRI 3

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            bindings = <&escape_layer0>;
            key-positions = <0 1>;
            timeout-ms = <50>;
        };

        toggle_left {
            bindings = <&tog 2>;
            key-positions = <30 20>;
            timeout-ms = <50>;
            layers = <0>;
        };

        toggle_right {
            bindings = <&tog 1>;
            key-positions = <33 29>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_activate_bt_layer {
            bindings = <&to 4>;
            key-positions = <20 0 10>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <RIG LEF>;
            then-layer = <TRI>;
        };
    };

    macros {
        escape_layer0: escape_layer0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &to 0>;
            label = "ESCAPE_LAYER0";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W       &kp E        &kp R       &kp T          &kp Y        &kp U       &kp I        &kp O       &kp P
&ht GLOBE A  &ht LCTRL S  &ht LALT D  &ht LGUI F  &kp G    &ht GLOBE H  &ht RGUI J  &ht RALT K   &ht RCTRL L  &bspc_del
&kp Z        &kp X       &kp C        &kp V       &kp B          &kp N        &kp M       &kp COMMA    &kp DOT     &kp ENTER
&lt LEF TAB  &kp LSHIFT                                                                                &kp SPACE   &lt RIG TAB
            >;
        };

        right_layer {
            bindings = <
&kp SLASH     &kp N7       &kp N8        &kp N9       &kp MINUS         &kp INSERT     &kp HOME        &kp UP_ARROW    &kp END          &kp CAPSLOCK
&ht GLOBE ASTERISK  &ht LCTRL N4  &ht LALT N5  &ht LGUI N6  &kp PLUS    &kp PAGE_UP    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &bspc_del
&kp N0        &kp N1       &kp N2        &kp N3       &kp PERIOD        &kp PAGE_DOWN  &kp K_APP       &kp SCROLLLOCK  &trans           &trans
&trans        &trans                                                                                                   &trans           &trans
            >;
        };

        left_layer {
            bindings = <
&kp EXCL  &kp AT         &kp HASH        &kp DLLR       &kp PRCNT              &kp CARET       &kp AMPS        &kp ASTRK        &kp GRAVE       &kp TILDE
&ht GLOBE DQT   &ht LCTRL LBKT  &ht LALT LBRC  &ht LGUI LPAR  &kp LESS_THAN    &ht GLOBE FSLH  &ht RGUI MINUS  &ht RALT EQUAL  &ht RCTRL COLON  &kp SEMI
&kp SQT   &kp RBKT       &kp RBRC        &kp RPAR       &kp GT                 &kp BSLH        &kp UNDER       &kp PLUS         &kp PIPE        &kp QMARK
&trans    &trans                                                                                                                &trans          &trans
            >;
        };

        tri_layer {
            bindings = <
&kp F1  &kp F2       &kp F3        &kp F4       &trans    &trans  &trans             &kp C_NEXT      &kp C_MUTE         &to 0
&ht GLOBE F5  &ht LCTRL F6  &ht LALT F7  &ht LGUI F8  &trans    &trans  &ht RGUI C_BRI_UP  &ht RALT C_PP   &ht RCTRL C_VOL_UP  &to 1
&kp F9  &kp F10      &kp F11       &kp F12      &trans    &trans  &kp C_BRI_DEC      &kp C_PREV      &kp C_VOL_DN       &to 2
&trans  &trans                                                                                       &trans             &trans
            >;
        };

        bt_layer {
            bindings = <
&trans  &bt BT_SEL 2  &trans  &trans  &out OUT_TOG    &trans &trans   &trans  &trans  &trans
&trans  &bt BT_SEL 1  &trans  &trans  &trans          &trans &trans   &trans  &trans  &trans
&trans  &bt BT_SEL 0  &trans  &trans  &bt BT_CLR      &trans &trans   &trans  &trans  &trans
&trans  &trans                                                                      &trans  &trans
            >;
        };
    };
};
